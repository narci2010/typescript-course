{
  "compileOnSave": false,
  "compilerOptions": {
    "baseUrl": ".",
    "outDir": "./dist", // 写不写都行
    "module": "es6", // 用 es6 模块引入 import
    "target": "es5", // 打包成 es5 ES2015
    "allowJs": true, // 允许在 ts 中也能引入 js 的文件
    "sourceMap": false, //把 ts 文件编译成 js 文件的时候，同时生成对应的 map 文件
    "removeComments": true, //编译 js 的时候，删除掉注释
    "declaration": false, //生成相应的.d.ts文件。
    "noImplicitThis": true,
    "strictNullChecks": true,
    "downlevelIteration": true,
    "jsx": "preserve",
    // "moduleResolution": "node", //模块的解析
    "emitDecoratorMetadata": true, //给源码里的装饰器声明加上设计类型元数据。
    "experimentalDecorators": true, //启用实验性的ES装饰器。
    //exclude：不包含的编译目录
    //noImplicitAny：true/false；为 false 时，如果编译器无法根据变量的使用来判断类型时，将用 any 类型代替。为 true 时，进行强类型检查，会报错
    "typeRoots": ["node_modules/@types"], //要包含的类型声明文件路径列表。
    "lib": [
      //添加需要的解析的语法，否则TS会检测出错。
      "es2015",
      "es2016",
      //"dom"
      "es2017"
    ],
    "paths": {
      "@/*": ["src/*"]
    }
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}
